<?php

/**
 * BaseAsset
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $asset_id
 * @property integer $node_id
 * @property integer $provider_id
 * @property integer $asset_type_id
 * @property integer $brand_id
 * @property integer $asset_status_id
 * @property integer $asset_condition_id
 * @property integer $asset_load_id
 * @property integer $asset_document_count
 * @property string $asset_num_factura
 * @property string $asset_name
 * @property string $asset_num_serie
 * @property string $asset_num_serie_intern
 * @property string $asset_cost
 * @property string $asset_current_cost
 * @property date $asset_purchase_date
 * @property integer $asset_lifetime
 * @property date $asset_last_inventory
 * @property date $asset_expiration_date_lifetime
 * @property string $asset_description
 * @property integer $asset_estate
 * @property timestamp $asset_upload_date
 * @property date $asset_load_date
 * @property AssetLoad $AssetLoad
 * @property AssetType $AssetType
 * @property AssetStatus $AssetStatus
 * @property AssetCondition $AssetCondition
 * @property Brand $Brand
 * @property Provider $Provider
 * @property Node $Node
 * @property Doctrine_Collection $AssetDocument
 * @property Doctrine_Collection $AssetInsurance
 * @property Doctrine_Collection $AssetInventory
 * @property Doctrine_Collection $AssetMeasurement
 * @property Doctrine_Collection $AssetOtherDataValue
 * @property Doctrine_Collection $ContractAsset
 * @property Doctrine_Collection $MtnWorkOrder
 * @property Doctrine_Collection $Request
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAsset extends Doctrine_Record {

    public function setTableDefinition() {
	$this->setTableName('asset');
	$this->hasColumn('asset_id', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => true,
	    'autoincrement' => true,
	));
	$this->hasColumn('node_id', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('provider_id', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_type_id', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('brand_id', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => true,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_status_id', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_condition_id', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
        $this->hasColumn('asset_load_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('asset_document_count', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('asset_num_factura', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
	$this->hasColumn('asset_name', 'string', 30, array(
	    'type' => 'string',
	    'length' => 30,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_num_serie', 'string', 50, array(
	    'type' => 'string',
	    'length' => 50,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_num_serie_intern', 'string', 50, array(
	    'type' => 'string',
	    'length' => 50,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
        $this->hasColumn('asset_cost', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
        $this->hasColumn('asset_current_cost', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_purchase_date', 'date', null, array(
	    'type' => 'date',
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_lifetime', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => true,
	    'autoincrement' => false,
	));
        $this->hasColumn('asset_last_inventory', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
	$this->hasColumn('asset_expiration_date_lifetime', 'date', null, array(
	    'type' => 'date',
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_description', 'string', null, array(
	    'type' => 'string',
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => false,
	    'autoincrement' => false,
	));
	$this->hasColumn('asset_estate', 'integer', 4, array(
	    'type' => 'integer',
	    'length' => 4,
	    'fixed' => false,
	    'unsigned' => false,
	    'primary' => false,
	    'notnull' => true,
	    'autoincrement' => false,
	));
        $this->hasColumn('asset_upload_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('asset_load_date', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }
    public function setUp() {
	parent::setUp();
        $this->hasOne('AssetLoad', array(
             'local' => 'asset_load_id',
             'foreign' => 'asset_load_id'));

	$this->hasOne('AssetType', array(
	    'local' => 'asset_type_id',
	    'foreign' => 'asset_type_id'));

	$this->hasOne('AssetStatus', array(
	    'local' => 'asset_status_id',
	    'foreign' => 'asset_status_id'));

	$this->hasOne('AssetCondition', array(
	    'local' => 'asset_condition_id',
	    'foreign' => 'asset_condition_id'));

	$this->hasOne('Brand', array(
	    'local' => 'brand_id',
	    'foreign' => 'brand_id'));

        $this->hasOne('Provider', array(
             'local' => 'provider_id',
             'foreign' => 'provider_id'));

        $this->hasOne('Node', array(
             'local' => 'node_id',
             'foreign' => 'node_id'));

	$this->hasMany('AssetDocument', array(
	    'local' => 'asset_id',
	    'foreign' => 'asset_id'));

	$this->hasMany('AssetInsurance', array(
	    'local' => 'asset_id',
	    'foreign' => 'asset_id'));

	$this->hasMany('AssetInventory', array(
	    'local' => 'asset_id',
	    'foreign' => 'asset_id'));

        $this->hasMany('AssetLog', array(
             'local' => 'asset_id',
             'foreign' => 'asset_id'));

	$this->hasMany('AssetMeasurement', array(
	    'local' => 'asset_id',
	    'foreign' => 'asset_id'));

        $this->hasMany('AssetOtherDataValue', array(
             'local' => 'asset_id',
             'foreign' => 'asset_id'));

        $this->hasMany('ContractAsset', array(
	    'local' => 'asset_id',
	    'foreign' => 'asset_id'));

	$this->hasMany('MtnWorkOrder', array(
	    'local' => 'asset_id',
	    'foreign' => 'asset_id'));

	$this->hasMany('Request', array(
	    'local' => 'asset_id',
	    'foreign' => 'asset_id'));
    }
}
