<?php

/**
 * BaseAssetAttribute
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $asset_atribute_id
 * @property integer $asset_id
 * @property integer $asset_type_attribute_id
 * @property string $asset_attribute_value
 * @property Asset $Asset
 * @property AssetTypeAttribute $AssetTypeAttribute
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAssetAttribute extends Doctrine_Record {

    public function setTableDefinition() {
        $this->setTableName('asset_attribute');
        $this->hasColumn('asset_atribute_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('asset_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('asset_type_attribute_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('asset_attribute_value', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }
    public function setUp() {
        parent::setUp();
        $this->hasOne('Asset', array(
             'local' => 'asset_id',
             'foreign' => 'asset_id'));

        $this->hasOne('AssetTypeAttribute', array(
             'local' => 'asset_type_attribute_id',
             'foreign' => 'asset_type_attribute_id'));
    }
}
