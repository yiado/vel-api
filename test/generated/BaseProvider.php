<?php

/**
 * BaseProvider
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $provider_id
 * @property integer $provider_type_id
 * @property string $provider_name
 * @property string $provider_contact
 * @property string $provider_phone
 * @property string $provider_fax
 * @property string $provider_email
 * @property string $provider_description
 * @property ProviderType $ProviderType
 * @property Doctrine_Collection $Asset
 * @property Doctrine_Collection $AssetInsurance
 * @property Doctrine_Collection $Contract
 * @property Doctrine_Collection $MtnPriceList
 * @property Doctrine_Collection $MtnWorkOrder
 * @property Doctrine_Collection $UserProvider
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseProvider extends Doctrine_Record {

    public function setTableDefinition() {
        $this->setTableName('provider');
        $this->hasColumn('provider_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('provider_type_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('provider_name', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('provider_contact', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('provider_phone', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('provider_fax', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('provider_email', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('provider_description', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }
    public function setUp() {
        parent::setUp();
        $this->hasOne('ProviderType', array(
             'local' => 'provider_type_id',
             'foreign' => 'provider_type_id'));

        $this->hasMany('Asset', array(
             'local' => 'provider_id',
             'foreign' => 'provider_id'));

        $this->hasMany('AssetInsurance', array(
             'local' => 'provider_id',
             'foreign' => 'provider_id'));

        $this->hasMany('Contract', array(
             'local' => 'provider_id',
             'foreign' => 'provider_id'));

        $this->hasMany('MtnPriceList', array(
             'local' => 'provider_id',
             'foreign' => 'provider_id'));

        $this->hasMany('MtnWorkOrder', array(
             'local' => 'provider_id',
             'foreign' => 'provider_id'));

        $this->hasMany('UserProvider', array(
             'local' => 'provider_id',
             'foreign' => 'provider_id'));
    }
}
