<?php

/**
 * BaseMtnWorkOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $mtn_work_order_id
 * @property string $mtn_work_order_folio
 * @property integer $mtn_config_state_id
 * @property integer $mtn_work_order_creator_id
 * @property integer $asset_id
 * @property integer $asset_measurement_id
 * @property integer $provider_id
 * @property string $mtn_work_order_requested_by
 * @property timestamp $mtn_work_order_created
 * @property date $mtn_work_order_date
 * @property string $mtn_work_order_comment
 * @property integer $mtn_work_order_status
 * @property integer $mtn_work_order_closed
 * @property MtnConfigState $MtnConfigState
 * @property User $User
 * @property Asset $Asset
 * @property Provider $Provider
 * @property Doctrine_Collection $MtnStatusLog
 * @property Doctrine_Collection $MtnWorkOrderOtherCosts
 * @property Doctrine_Collection $MtnWorkOrderTask
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseMtnWorkOrder extends Doctrine_Record {

    public function setTableDefinition() {
        $this->setTableName('mtn_work_order');
        $this->hasColumn('mtn_work_order_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('mtn_work_order_folio', 'string', 11, array(
             'type' => 'string',
             'length' => 11,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('mtn_config_state_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('mtn_work_order_creator_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('asset_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('asset_measurement_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('provider_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('mtn_work_order_requested_by', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('mtn_work_order_created', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('mtn_work_order_date', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('mtn_work_order_comment', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('mtn_work_order_status', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('mtn_work_order_closed', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
    }
    public function setUp() {
        parent::setUp();
        $this->hasOne('MtnConfigState', array(
             'local' => 'mtn_config_state_id',
             'foreign' => 'mtn_config_state_id'));

        $this->hasOne('User', array(
             'local' => 'mtn_work_order_creator_id',
             'foreign' => 'user_id'));

        $this->hasOne('Asset', array(
             'local' => 'asset_id',
             'foreign' => 'asset_id'));

        $this->hasOne('Provider', array(
             'local' => 'provider_id',
             'foreign' => 'provider_id'));

        $this->hasMany('MtnStatusLog', array(
             'local' => 'mtn_work_order_id',
             'foreign' => 'mtn_work_order_id'));

        $this->hasMany('MtnWorkOrderOtherCosts', array(
             'local' => 'mtn_work_order_id',
             'foreign' => 'mtn_work_order_id'));

        $this->hasMany('MtnWorkOrderTask', array(
             'local' => 'mtn_work_order_id',
             'foreign' => 'mtn_work_order_id'));
    }
}
